@mixin backImage($image, $height: 100vh, $bgPos: center center) {
  background: linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.6)),
    url($image);
  background-repeat: no-repeat;
  background-position: $bgPos;
  background-size: cover;
  height: $height;
}

@mixin clearfix {
  &:before,
  &:after {
    content: '';
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin flexcenter {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin boxshadow {
  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);
}

@mixin imagegrid($qty, $margin) {
  width: ((100% - (($qty - 1) * $margin)) / $qty);
  &:nth-child(n) {
    margin-right: $margin;
    margin-bottom: $margin;
  }
  &:nth-child(#{$qty}n) {
    margin-right: 0;
    margin-bottom: 0;
  }
}

// Breakpoint mixin

@mixin break($maxmin, $args...) {
  @if (length($args) == 1) and ($maxmin == 'max') {
    @media only screen and (max-width: nth($args, 1)) {
      @content;
    }
  } @else if (length($args) == 1) and ($maxmin == 'min') {
    @media only screen and (min-width: ($args)) {
      @content;
    }
  } @else {
    @media only screen and (min-width: nth($args, 1)) and (max-width: nth($args, 2)) {
      @content;
    }
  }
}

$max: 50;
$offset: 5;
$unit: 'px';

@mixin list-loop($className, $styleName) {
  $i: 0;
  @while $i <= $max {
    #{$className + $i} {
      #{$styleName}: #{$i + $unit};
    }
    $i: $i + $offset;
  }
}
